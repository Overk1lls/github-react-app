{
  "openapi": "3.0.3",
  "info": { 
    "version": "1.0.0",
    "title": "Github React App",
    "description": "A simple app to work with Github and test skills",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": " Yurii Pakhota",
      "email": "ov3rfordream@gmail.com",
      "license": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "A local server"
    }
  ],
  "tags": [
    {
      "name": "repository",
      "description": "Git repositories"
    },
    {
      "name": "branch",
      "description": "Git branches"
    },
    {
      "name": "commit",
      "description": "Git commits"
    },
    {
      "name": "organization",
      "description": "Git organizations"
    },
    {
      "name": "auth",
      "description": "Everything related to authorization"
    }
  ],
  "paths": {
    "/repos/by-owner/{owner}/{repo}/branches": {
      "get": {
        "tags": [
          "branch"
        ],
        "summary": "Get a list of branches",
        "description": "Get a list of branches by the owner and repository names",
        "operationId": "getBranches",
        "parameters": [
          {
            "in": "path",
            "name": "owner",
            "schema": {
              "type": "string"
            },
            "description": "The name of a repository owner",
            "required": "true"
          },
          {
            "in": "path",
            "name": "repo",
            "schema": {
              "type": "string"
            },
            "description": "The name of a repository",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The repository is not found with the these parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/repos/by-owner/{owner}/{repo}/commits": {
      "get": {
        "tags": [
          "commit"
        ],
        "summary": "Get a list of commits",
        "description": "Get a list of commits by the owner and repository names",
        "operationId": "getCommits",
        "parameters": [
          {
            "in": "path",
            "name": "owner",
            "schema": {
              "type": "string"
            },
            "description": "The name of a repository owner",
            "required": "true"
          },
          {
            "in": "path",
            "name": "repo",
            "schema": {
              "type": "string"
            },
            "description": "The name of a repository",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Commit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The repository is not found with the these parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/repos/by-org/{org}": {
      "get": {
        "tags": [
          "repository"
        ],
        "summary": "Get a list of repositories",
        "description": "Get a list of repositories by an organization name",
        "operationId": "getRepos",
        "parameters": [
          {
            "in": "path",
            "name": "org",
            "schema": {
              "type": "string"
            },
            "description": "The name of an organization",
            "required": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type:": "object",
                  "properties": {
                    "repositories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Repository"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The organization is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Authorize a user",
        "description": "Authorize a user and get an access token via a Github account",
        "operationId": "authorize",
        "requestBody": {
          "description": "A code provided by Github to get an access token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Code"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "$ref": "#/components/schemas/AccessToken"
                        },
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The code passed is incorrect or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Branch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "commit": {
            "type": "object",
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "protected": {
            "type": "boolean"
          }
        }
      },
      "Commit": {
        "type": "object",
        "properties": {
          "sha": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "comments_url": {
            "type": "string"
          }
        }
      },
      "Repository": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "node_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "stargazers_count": {
            "type": "number"
          },
          "watchers_count": {
            "type": "number"
          },
          "forks": {
            "type": "number"
          }
        }
      },
      "Code": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "AccessToken": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "token_type": {
                "type": "string"
              },
              "scope": {
                "type": "string"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "login": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message:": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      }
    }
  }
}